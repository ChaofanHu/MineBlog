{"ast":null,"code":"import BlogHeader from \"../components/blogHeader.vue\";\nimport SecondHeader from \"../components/SecondHeader.vue\";\nimport BlogFooter from \"../components/BlogFooter.vue\";\nexport default {\n  components: {\n    BlogHeader,\n    SecondHeader,\n    BlogFooter\n  },\n  data() {\n    return {\n      Title: \"\",\n      Catagory: null,\n      Date: null,\n      optionsCatagory: [{\n        text: 'Backend',\n        value: 1\n      }, {\n        text: 'Frontend',\n        value: 2\n      }, {\n        text: 'DAO',\n        value: 3\n      }, {\n        text: 'BUGS',\n        value: 4\n      }],\n      numberToWordMap: {\n        1: 'One',\n        2: 'Two',\n        3: 'Three'\n        // 可以继续添加其他映射\n      },\n\n      // 假设这是后台传来的数据来源\n      //    data:[],\n      data: [\n        // {Id:1,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:2,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:3,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:4,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:5,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:6,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:7,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:8,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"}\n      ],\n      // 所有页面的数据\n      totalPage: [],\n      // 每页显示数量\n      pageSize: 5,\n      // 共几页\n      pageNum: 1,\n      // 当前显示的数据\n      dataShow: \"\",\n      // 默认当前显示第一页\n      currentPage: 0\n    };\n  },\n  created() {\n    this.selectAll();\n  },\n  methods: {\n    //get all blogs \n    dividePage() {\n      this.pageNum = Math.ceil(this.data.length / this.pageSize) || 1; //计算有多少页数据，默认为1\n      // 循环页面\n      for (let i = 0; i < this.pageNum; i++) {\n        // 每一页都是一个数组 形如 [['第一页的数据'],['第二页的数据'],['第三页数据']]\n        // 根据每页显示数量 将后台的数据分割到 每一页,假设pageSize为2， 则第一页是1-2条，即slice(0,2)，第二页是3-4条，即slice(3,4)以此类推\n        this.totalPage[i] = this.data.slice(this.pageSize * i, this.pageSize * (i + 1));\n      }\n      // 获取到数据后默认显示第一页内容\n      this.dataShow = this.totalPage[this.currentPage];\n    },\n    selectAll() {\n      var _this = this;\n      this.axios.get(\"http://localhost:8090/admin/getAllBlogs\"\n      // ,{\n      //     headers: {\n      //         'Content-Type': 'application/json',\n      //         'token': localStorage.getItem('token')\n      //     }\n      // }\n      ).then(function (resp) {\n        const preData = resp;\n        for (let index = 0; index < preData.data.length; index++) {\n          for (let index2 = 0; index < _this.optionsCatagory.length; index2++) {\n            preData.data[index].typeId = _this.optionsCatagory[index2].text;\n          }\n        }\n        _this.data = preDatadata;\n        _this.dividePage();\n      });\n    },\n    // 下一页\n    nextPage() {\n      if (this.currentPage === this.pageNum - 1) return;\n      this.dataShow = this.totalPage[++this.currentPage];\n    },\n    // 上一页\n    prePage() {\n      if (this.currentPage === 0) return;\n      this.dataShow = this.totalPage[--this.currentPage];\n    },\n    getCategoryText(typeId) {\n      const category = this.optionsCategory.find(option => option.value === typeId);\n      return category ? category.text : 'Unknown';\n    }\n\n    // getMappedText() {\n    //     return (param) => {\n    //         const matchingOption = this.optionsCategory.find(option => option.value === param);\n    //         return matchingOption ? matchingOption.text : '未知';\n    //     };\n    // }\n  }\n};","map":{"version":3,"names":["BlogHeader","SecondHeader","BlogFooter","components","data","Title","Catagory","Date","optionsCatagory","text","value","numberToWordMap","totalPage","pageSize","pageNum","dataShow","currentPage","created","selectAll","methods","dividePage","Math","ceil","length","i","slice","_this","axios","get","then","resp","preData","index","index2","typeId","preDatadata","nextPage","prePage","getCategoryText","category","optionsCategory","find","option"],"sources":["src/views/blogManPage.vue"],"sourcesContent":["<template>\n    <div>\n            <!-- head  -->\n        <BlogHeader></BlogHeader>\n    <!-- secondary header  -->\n        <SecondHeader></SecondHeader>\n        <!-- <SecondHeader></SecondHeader> -->\n\n    <!-- content  -->\n    <div class=\"m-container-small m-padding-tb\">\n        <div class=\"ui container\">\n            <sui-form>\n                <sui-header dividing>Search</sui-header>\n                <sui-form-fields fields=\"three\">\n                    <sui-form-field>\n                    <input\n                        type=\"text\"\n                        name=\"shipping[first-name]x\"\n                        placeholder=\"Title\"\n                        v-model=\"Title\"\n                    />\n                    </sui-form-field>\n                    <sui-form-field>\n                    <sui-dropdown\n                        placeholder=\"Catagory\"\n                        selection\n                        :options=\"optionsCatagory\"\n                        v-model=\"Catagory\"\n                        />\n                    </sui-form-field>\n                 \n                        <sui-button color=\"teal\" type=\"submit\" >Search</sui-button>\n\n                    \n                </sui-form-fields>\n                \n             </sui-form>\n            \n        \n            <table class=\"ui celled table\">\n                <thead>\n                    <tr><th>Title</th>\n                    <th>Catagory</th>\n                    <th>Date</th>\n                    <th>Operation</th>\n                </tr></thead>\n                <tbody>\n                    <tr v-for=\"blog in dataShow\" :key=\"blog.id\">\n                        <td data-label=\"Title\">{{blog.title}}</td>\n                        <td data-label=\"Catagory\">{{ blog.typeId }}</td>\n                        <td data-label=\"Date\">{{ blog.createTime }}</td>\n                        <td data-label=\"Operation\"><a href=\"\" class=\"ui mini teal button\">Edit</a><a href=\"\" class=\"ui mini teal button\">Delete</a></td>\n                    </tr>\n                </tbody>\n                <tfoot>\n                    <tr><th colspan=\"5\">\n                        <div class=\"ui right floated pagination menu\">\n                            <a class=\"icon item\">\n                            <i class=\"left chevron icon\" @click=\"prePage\"></i>\n                            </a>\n                         \n                            <a class=\"icon item\">\n                            <i class=\"right chevron icon\" @click=\"nextPage\"></i>\n                            </a>\n                        </div>\n                        <a href=\"\" class=\"ui mini floating teal basic button\">Add</a>\n                        </th>\n                    </tr>\n                </tfoot>\n            </table>\n        </div>\n    </div>\n\n        <!-- bottom -->\n        <BlogFooter></BlogFooter>\n    </div>\n    \n</template>\n\n<script>\nimport BlogHeader from \"../components/blogHeader.vue\";\nimport SecondHeader from \"../components/SecondHeader.vue\"\nimport BlogFooter from \"../components/BlogFooter.vue\"\n\n\nexport default {\n    components:{\n        BlogHeader,\n        SecondHeader,\n        BlogFooter\n    },\n   data() {\n    return {\n        Title:\"\",\n        Catagory: null,\n        Date: null,\n        optionsCatagory: [\n        {\n          text: 'Backend',\n          value: 1,\n        },\n        {\n          text: 'Frontend',\n          value: 2,\n        },\n        {\n          text: 'DAO',\n          value: 3,\n        },\n        {\n          text: 'BUGS',\n          value: 4,\n        }\n        ],\n        numberToWordMap : {\n            1: 'One',\n            2: 'Two',\n            3: 'Three',\n            // 可以继续添加其他映射\n        },\n       // 假设这是后台传来的数据来源\n    //    data:[],\n        data: [\n        // {Id:1,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:2,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:3,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:4,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:5,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:6,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:7,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"},\n        // {Id:8,Title:\"Java\",Catagory:\"Backend\",Date:\"2022-02-02\"}\n       ],\n      // 所有页面的数据\n      totalPage: [],\n      // 每页显示数量\n      pageSize: 5,\n      // 共几页\n      pageNum: 1,\n      // 当前显示的数据\n      dataShow: \"\",\n      // 默认当前显示第一页\n      currentPage: 0\n    };\n    },\n    created(){\n        this.selectAll();\n    },\n    methods:{\n        //get all blogs \n        dividePage(){\n            this.pageNum = Math.ceil(this.data.length / this.pageSize) || 1;//计算有多少页数据，默认为1\n            // 循环页面\n            for (let i = 0; i < this.pageNum; i++) {\n            // 每一页都是一个数组 形如 [['第一页的数据'],['第二页的数据'],['第三页数据']]\n            // 根据每页显示数量 将后台的数据分割到 每一页,假设pageSize为2， 则第一页是1-2条，即slice(0,2)，第二页是3-4条，即slice(3,4)以此类推\n            this.totalPage[i] = this.data.slice(this.pageSize * i, this.pageSize * (i + 1))\n            }\n            // 获取到数据后默认显示第一页内容\n            this.dataShow = this.totalPage[this.currentPage];\n        },\n        selectAll(){\n            var _this = this\n            this.axios.get(\"http://localhost:8090/admin/getAllBlogs\"\n            // ,{\n            //     headers: {\n            //         'Content-Type': 'application/json',\n            //         'token': localStorage.getItem('token')\n            //     }\n            // }\n            )\n            .then(function(resp){\n                const preData = resp;\n                for (let index = 0; index < preData.data.length; index++) {\n                    for(let index2 = 0; index < _this.optionsCatagory.length; index2++){\n                        preData.data[index].typeId = _this.optionsCatagory[index2].text;\n                    }\n                    \n                }\n                _this.data = preDatadata;\n                \n                _this.dividePage();\n            })\n        },\n        // 下一页\n        nextPage() {\n        if (this.currentPage === this.pageNum - 1) return ;\n            this.dataShow = this.totalPage[++this.currentPage];\n        },\n        // 上一页\n        prePage() {\n            if (this.currentPage === 0) return ;\n              this.dataShow = this.totalPage[--this.currentPage];\n            },\n        getCategoryText(typeId) {\n        const category = this.optionsCategory.find(option => option.value === typeId);\n        return category ? category.text : 'Unknown';\n    },\n    \n\n        // getMappedText() {\n        //     return (param) => {\n        //         const matchingOption = this.optionsCategory.find(option => option.value === param);\n        //         return matchingOption ? matchingOption.text : '未知';\n        //     };\n        // }\n    }\n};\n</script>\n\n<style>\n@import \"../assets/css/me.css\";\n</style>"],"mappings":"AAgFA,OAAAA,UAAA;AACA,OAAAC,YAAA;AACA,OAAAC,UAAA;AAGA;EACAC,UAAA;IACAH,UAAA;IACAC,YAAA;IACAC;EACA;EACAE,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,IAAA;MACAC,eAAA,GACA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,GACA;QACAD,IAAA;QACAC,KAAA;MACA,EACA;MACAC,eAAA;QACA;QACA;QACA;QACA;MACA;;MACA;MACA;MACAP,IAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MAAA,CACA;MACA;MACAQ,SAAA;MACA;MACAC,QAAA;MACA;MACAC,OAAA;MACA;MACAC,QAAA;MACA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACA;IACAC,WAAA;MACA,KAAAN,OAAA,GAAAO,IAAA,CAAAC,IAAA,MAAAlB,IAAA,CAAAmB,MAAA,QAAAV,QAAA;MACA;MACA,SAAAW,CAAA,MAAAA,CAAA,QAAAV,OAAA,EAAAU,CAAA;QACA;QACA;QACA,KAAAZ,SAAA,CAAAY,CAAA,SAAApB,IAAA,CAAAqB,KAAA,MAAAZ,QAAA,GAAAW,CAAA,OAAAX,QAAA,IAAAW,CAAA;MACA;MACA;MACA,KAAAT,QAAA,QAAAH,SAAA,MAAAI,WAAA;IACA;IACAE,UAAA;MACA,IAAAQ,KAAA;MACA,KAAAC,KAAA,CAAAC,GAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,EACAC,IAAA,WAAAC,IAAA;QACA,MAAAC,OAAA,GAAAD,IAAA;QACA,SAAAE,KAAA,MAAAA,KAAA,GAAAD,OAAA,CAAA3B,IAAA,CAAAmB,MAAA,EAAAS,KAAA;UACA,SAAAC,MAAA,MAAAD,KAAA,GAAAN,KAAA,CAAAlB,eAAA,CAAAe,MAAA,EAAAU,MAAA;YACAF,OAAA,CAAA3B,IAAA,CAAA4B,KAAA,EAAAE,MAAA,GAAAR,KAAA,CAAAlB,eAAA,CAAAyB,MAAA,EAAAxB,IAAA;UACA;QAEA;QACAiB,KAAA,CAAAtB,IAAA,GAAA+B,WAAA;QAEAT,KAAA,CAAAN,UAAA;MACA;IACA;IACA;IACAgB,SAAA;MACA,SAAApB,WAAA,UAAAF,OAAA;MACA,KAAAC,QAAA,QAAAH,SAAA,QAAAI,WAAA;IACA;IACA;IACAqB,QAAA;MACA,SAAArB,WAAA;MACA,KAAAD,QAAA,QAAAH,SAAA,QAAAI,WAAA;IACA;IACAsB,gBAAAJ,MAAA;MACA,MAAAK,QAAA,QAAAC,eAAA,CAAAC,IAAA,CAAAC,MAAA,IAAAA,MAAA,CAAAhC,KAAA,KAAAwB,MAAA;MACA,OAAAK,QAAA,GAAAA,QAAA,CAAA9B,IAAA;IACA;;IAGA;IACA;IACA;IACA;IACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}