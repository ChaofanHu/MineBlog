{"ast":null,"code":"import BlogHeader from \"../components/blogHeader.vue\";\nimport BLogFooter from \"../components/BlogFooter.vue\";\nexport default {\n  components: {\n    BlogHeader,\n    BLogFooter\n  },\n  data() {\n    return {\n      categories: [],\n      // 后台传来的数据源\n      data: [],\n      // 所有页面的数据\n      totalPage: [],\n      // 每页显示数量\n      pageSize: 5,\n      // 共几页\n      pageNum: 1,\n      // 当前显示的数据\n      dataShow: \"\",\n      // 默认当前显示第一页\n      currentPage: 0\n    };\n  },\n  methods: {\n    dividePage() {\n      this.pageNum = Math.ceil(this.data.length / this.pageSize) || 1; //计算有多少页数据，默认为1\n      // 循环页面\n      for (let i = 0; i < this.pageNum; i++) {\n        // 每一页都是一个数组 形如 [['第一页的数据'],['第二页的数据'],['第三页数据']]\n        // 根据每页显示数量 将后台的数据分割到 每一页,假设pageSize为2， 则第一页是1-2条，即slice(0,2)，第二页是3-4条，即slice(3,4)以此类推\n        this.totalPage[i] = this.data.slice(this.pageSize * i, this.pageSize * (i + 1));\n      }\n      // 获取到数据后默认显示第一页内容\n      this.dataShow = this.totalPage[this.currentPage];\n    },\n    // 下一页\n    nextPage() {\n      if (this.currentPage === this.pageNum - 1) return;\n      this.dataShow = this.totalPage[++this.currentPage];\n    },\n    // 上一页\n    prePage() {\n      if (this.currentPage === 0) return;\n      this.dataShow = this.totalPage[--this.currentPage];\n    },\n    selectAll() {\n      var _this = this;\n      this.axios.get(\"http://localhost:8090/getAllBlogs\").then(function (resp) {\n        _this.data = resp.data;\n        // alert(resp.data)\n        _this.dividePage();\n      });\n      this.axios.get(\"http://localhost:8090/\");\n    }\n  },\n  created: function () {\n    this.selectAll();\n  }\n};","map":{"version":3,"names":["BlogHeader","BLogFooter","components","data","categories","totalPage","pageSize","pageNum","dataShow","currentPage","methods","dividePage","Math","ceil","length","i","slice","nextPage","prePage","selectAll","_this","axios","get","then","resp","created"],"sources":["src/views/catagoryPage.vue"],"sourcesContent":["<template>\n    <div>\n      <!-- head -->\n      <BlogHeader></BlogHeader>\n  \n      <div class=\"m-container-small m-padding-tb-larger\">\n        <div class=\"ui container\">\n          <div class=\"ui top attached segment\">\n            <div class=\"ui middle aligned two column grid\">\n              <div class=\"column\">\n                <h3 class=\"ui teal header\">Category</h3>\n              </div>\n              <div class=\"right aligned column\">\n                Total <h3 class=\"ui orange header m-inline-block\">14</h3> Blogs\n              </div>\n            </div>\n          </div>\n  \n          <!-- Category Buttons -->\n          <div class=\"ui attached segment\">\n            <div class=\"ui labeled button\" v-for=\"category in categories\" :key=\"category.name\">\n              <router-link :to=\"category.link\" class=\"ui basic teal button m-margin-tiny\">\n                {{ category.name }}\n              </router-link>\n              <div class=\"ui basic teal left pointing label\">{{ category.count }}</div>\n            </div>\n          </div>\n  \n          <!-- Blog List -->\n          <div class=\"ui segment\" v-for=\"blog in dataShow\" :key=\"blog.id\">\n            <div class=\"ui attached segment m-container\">\n              <div class=\"ui padded vertical segment\">\n                <div class=\"ui mobile reversed stackable grid\">\n                  <div class=\"eleven wide column\">\n                    <h3 class=\"ui header\">\n                      <router-link :to=\"`/homePage/blogPage/${blog.id}`\">{{ blog.title }}</router-link>\n                    </h3>\n                    <sui-divider />\n                    <p class=\"m-text\">{{ blog.introduction }}</p>\n                    <sui-divider hidden />\n                    <div class=\"ui stackable grid\">\n                      <div class=\"eleven wide column\">\n                        <div class=\"ui horizontal link list\">\n                          <div class=\"item\">\n                            <img :src=\"blog.icon\" alt=\"\" width=\"30\" height=\"30\" class=\"ui avatar image\">\n                            <div class=\"content m-inline-block m-text-indent\">\n                              <router-link :to=\"`/author/${blog.name}`\">{{ blog.name }}</router-link>\n                            </div>\n                          </div>\n                          <div class=\"item\">\n                            <i class=\"calendar icon\"></i> {{ blog.date }}\n                          </div>\n                          <div class=\"item\">\n                            <i class=\"eye icon\">{{ blog.view }}</i>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"right aligned five wide column\">\n                        <router-link :to=\"`/tags/${blog.tag}`\" class=\"ui label\">{{ blog.tag }}</router-link>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"five wide column\">\n                    <router-link :to=\"`/blogPage/${blog.id}`\" target=\"_blank\">\n                      <img :src=\"blog.picture\" alt=\"\" class=\"ui rounded image\">\n                    </router-link>\n                  </div>\n                </div>      \n              </div>\n            </div>\n          </div>\n  \n          <!-- Pagination -->\n          <div class=\"ui segment\">\n            <div class=\"ui bottom attached segment\">\n              <div class=\"ui middle aligned two column grid\">\n                <div class=\"column\">\n                  <router-link to=\"/previousPage\" class=\"ui mini black basic button\">Last Page</router-link>\n                </div>\n                <div class=\"right aligned column\">\n                  <router-link to=\"/nextPage\" class=\"ui mini black basic button\">Next Page</router-link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <BLogFooter></BLogFooter>\n    </div>\n  </template>\n  \n  <script>\n  import BlogHeader from \"../components/blogHeader.vue\";\n  import BLogFooter from \"../components/BlogFooter.vue\";\n  \n  export default {\n    components: {\n      BlogHeader,\n      BLogFooter\n    },\n    data () {\n        return{\n            categories: [],\n            // 后台传来的数据源\n            data: [],\n            // 所有页面的数据\n            totalPage: [],\n            // 每页显示数量\n            pageSize: 5,\n            // 共几页\n            pageNum: 1,\n            // 当前显示的数据\n            dataShow: \"\",\n            // 默认当前显示第一页\n            currentPage: 0\n        }\n    },\n    methods:{\n        dividePage(){\n            this.pageNum = Math.ceil(this.data.length / this.pageSize) || 1;//计算有多少页数据，默认为1\n            // 循环页面\n            for (let i = 0; i < this.pageNum; i++) {\n            // 每一页都是一个数组 形如 [['第一页的数据'],['第二页的数据'],['第三页数据']]\n            // 根据每页显示数量 将后台的数据分割到 每一页,假设pageSize为2， 则第一页是1-2条，即slice(0,2)，第二页是3-4条，即slice(3,4)以此类推\n            this.totalPage[i] = this.data.slice(this.pageSize * i, this.pageSize * (i + 1))\n            }\n            // 获取到数据后默认显示第一页内容\n            this.dataShow = this.totalPage[this.currentPage];\n        },\n        // 下一页\n        nextPage() {\n        if (this.currentPage === this.pageNum - 1) return ;\n            this.dataShow = this.totalPage[++this.currentPage];\n        },\n        // 上一页\n        prePage() {\n            if (this.currentPage === 0) return ;\n              this.dataShow = this.totalPage[--this.currentPage];\n        },\n        selectAll(){\n            var _this = this;\n            this.axios.get(\"http://localhost:8090/getAllBlogs\")\n            .then(function(resp){\n                _this.data = resp.data;\n                // alert(resp.data)\n                _this.dividePage();\n            })\n            this.axios.get(\"http://localhost:8090/\")\n        }\n    },\n    created: function(){\n        this.selectAll();\n    }\n  }\n  </script>\n  "],"mappings":"AA4FA,OAAAA,UAAA;AACA,OAAAC,UAAA;AAEA;EACAC,UAAA;IACAF,UAAA;IACAC;EACA;EACAE,KAAA;IACA;MACAC,UAAA;MACA;MACAD,IAAA;MACA;MACAE,SAAA;MACA;MACAC,QAAA;MACA;MACAC,OAAA;MACA;MACAC,QAAA;MACA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAJ,OAAA,GAAAK,IAAA,CAAAC,IAAA,MAAAV,IAAA,CAAAW,MAAA,QAAAR,QAAA;MACA;MACA,SAAAS,CAAA,MAAAA,CAAA,QAAAR,OAAA,EAAAQ,CAAA;QACA;QACA;QACA,KAAAV,SAAA,CAAAU,CAAA,SAAAZ,IAAA,CAAAa,KAAA,MAAAV,QAAA,GAAAS,CAAA,OAAAT,QAAA,IAAAS,CAAA;MACA;MACA;MACA,KAAAP,QAAA,QAAAH,SAAA,MAAAI,WAAA;IACA;IACA;IACAQ,SAAA;MACA,SAAAR,WAAA,UAAAF,OAAA;MACA,KAAAC,QAAA,QAAAH,SAAA,QAAAI,WAAA;IACA;IACA;IACAS,QAAA;MACA,SAAAT,WAAA;MACA,KAAAD,QAAA,QAAAH,SAAA,QAAAI,WAAA;IACA;IACAU,UAAA;MACA,IAAAC,KAAA;MACA,KAAAC,KAAA,CAAAC,GAAA,sCACAC,IAAA,WAAAC,IAAA;QACAJ,KAAA,CAAAjB,IAAA,GAAAqB,IAAA,CAAArB,IAAA;QACA;QACAiB,KAAA,CAAAT,UAAA;MACA;MACA,KAAAU,KAAA,CAAAC,GAAA;IACA;EACA;EACAG,OAAA,WAAAA,CAAA;IACA,KAAAN,SAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}